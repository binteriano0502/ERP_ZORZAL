@model ERP_GMEDINA.Models.tbCuponDescuento

@{
    ViewBag.Title = "Ragistrar";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <h2>Cupón Descuento</h2>
    </div>
    <div class="col-sm-8">
        <div class="title-action">
            @Html.ActionLink("Regresar", "Index")
        </div>
    </div>
</div>



<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Registrar Cupón Descuento</h5>
                </div>
                <div class="ibox-content">

                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            @Html.ValidationSummary(true)

                            <div class="form-group">
                                @Html.LabelFor(model => model.suc_Id, new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    <select id="suc_Id" name="suc_Id" class="form-control" readonly>
                                        <option value="1">San Pedro Sula</option>
                                    </select>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.cdto_PorcentajeDescuento, new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.cdto_PorcentajeDescuento, new { htmlAttributes = new { @*@type = "number",*@ @min = "0", @style = "text-align:right" } })
                                    <p style="color:red">@Html.ValidationMessageFor(model => model.cdto_PorcentajeDescuento)</p>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.cdto_MaximoMontoDescuento, new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.cdto_MaximoMontoDescuento, new { htmlAttributes = new { @*@type = "number",*@ @min = "0", @style = "text-align:right", @onkeypres= "MASK(this,this.value,'-L##,###,##0.00',1)", @onchange= "MASK(this,this.value,'-L##,###,##0.00',1)" } })
                                    <p style="color:red">@Html.ValidationMessageFor(model => model.cdto_MaximoMontoDescuento)</p>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.cdto_MontoDescuento, new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.cdto_MontoDescuento, new { htmlAttributes = new { @*@type = "number",*@ @min = "0", @style = "text-align:right", @onkeypres= "MASK(this,this.value,'-L##,###,##0.00',1)", @onchange= "MASK(this,this.value,'-L##,###,##0.00',1)" } })
                                    <p style="color:red">@Html.ValidationMessageFor(model => model.cdto_MontoDescuento)</p>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.cdto_CantidadCompraMinima, new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.cdto_CantidadCompraMinima, new { htmlAttributes = new { @*@type = "number",*@ @min = "0", @style = "text-align:right", @onkeypres= "MASK(this,this.value,'-L##,###,##0.00',1)", @onchange= "MASK(this,this.value,'-L##,###,##0.00',1)" } })
                                    <p style="color:red">@Html.ValidationMessageFor(model => model.cdto_CantidadCompraMinima)</p>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.cdto_FechaEmision, new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.cdto_FechaEmision, new { htmlAttributes = new { @readonly = "readonly" } })
                                    <p style="color:red">@Html.ValidationMessageFor(model => model.cdto_FechaEmision)</p>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.cdto_FechaVencimiento, new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.cdto_FechaVencimiento, new { htmlAttributes = new { @readonly = "readonly" } })
                                    <p style="color:red">@Html.ValidationMessageFor(model => model.cdto_FechaVencimiento)</p>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.cdto_FechaRedencion, new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.cdto_FechaRedencion, new { htmlAttributes = new { @readonly = "readonly" } })
                                    <p style="color:red">@Html.ValidationMessageFor(model => model.cdto_FechaRedencion)</p>
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-4">
                                    <input type="hidden" id="cdto_Redimido" name="cdto_Redimido" value="false" />
                                    <input type="hidden" id="cdto_Anulado" name="cdto_Anulado" value="false" />
                                    <input type="text" id="cdto_EsImpreso" name="cdto_EsImpreso" value="false" />
                                </div>
                            </div>


                            <div class="form-group">
                                <div class="col-md-12 text-center">
                                    <input type="submit" value="Guardar" class="btn btn-primary" />
                                    @Html.ActionLink("Cancelar", "Index", null, new { @class = "btn btn-white" })
                                </div>
                            </div>
                        </div>
                    }

                </div>
            </div>
        </div>
    </div>
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $.datepicker.regional['es'] = {
            closeText: 'Cerrar',
            prevText: '< Ant',
            nextText: 'Sig >',
            currentText: 'Hoy',
            monthNames: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'],
            monthNamesShort: ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dic'],
            dayNames: ['Domingo', 'Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado'],
            dayNamesShort: ['Dom', 'Lun', 'Mar', 'Mié', 'Juv', 'Vie', 'Sáb'],
            dayNamesMin: ['Do', 'Lu', 'Ma', 'Mi', 'Ju', 'Vi', 'Sá'],
            weekHeader: 'Sm',
            dateFormat: 'dd/mm/yy',
            firstDay: 1,
            isRTL: false,
            showMonthAfterYear: false,
            yearSuffix: ''
        };
        $.datepicker.setDefaults($.datepicker.regional['es']);

        //-------------Fecha Actual-----------------------
        $(function () {
            $("#cdto_FechaEmision").datepicker({ dateFormat: 'dd/mm/yy' }).datepicker('setDate', new Date()).datepicker("destroy");

        });

        //-----------Fecha Vencimiento (1 año)--------------------
        var d = new Date();
        var strDate = d.getDate() + "/" + (d.getMonth() + 1) + "/" + (d.getFullYear() + 1);
        $("#cdto_FechaVencimiento").val(strDate);

    </script>

    <script>
        $('#cdto_PorcentajeDescuento').focusout(function () {
            var Porcentaje = $('#cdto_PorcentajeDescuento').val();

            if (Porcentaje >= 1 ) {
                $('#cdto_PorcentajeDescuento').removeAttr("readonly");
                $('#cdto_MaximoMontoDescuento').removeAttr("readonly");
                $('#cdto_MontoDescuento').attr('readonly', 'readonly').val('0.00');
                $('#cdto_CantidadCompraMinima').attr('readonly', 'readonly').val('0.00');

            } else if (Porcentaje <= 0) {
                $('#cdto_PorcentajeDescuento').attr('readonly', 'readonly').val('0.00');
                $('#cdto_MaximoMontoDescuento').attr('readonly', 'readonly').val('0.00');
                $("#cdto_MontoDescuento").removeAttr("readonly").focus().val('');
                $('#cdto_CantidadCompraMinima').removeAttr("readonly").val('');

                //$('#cdto_CantidadCompraMinima').focusout(function () {
                //    var Monto = $('#cdto_MontoDescuento').val();
                //    var CompraMinima = $('#cdto_CantidadCompraMinima').val();
                //    if (CompraMinima > Monto) {
                //        alert("La Compra Minima debe ser mayor al Monto Descuento.")
                //        //$("#cdto_CantidadCompraMinima").removeAttr("readonly").focus();
                //    }
                //    else
                //    {

                //    }
                //});
            }
        });
    </script>

    <script type="text/javascript">
        jQuery('input,select').each(function () {
            var req = jQuery(this).attr('data-val-required');
            if (undefined != req) {
                var label = jQuery('label[for="' + jQuery(this).attr('id') + '"]');
                var text = label.text();
                if (text.length > 0) {
                    label.append('<span style="color:red">*</span>');
                }
            }
        });
        //---------------------------------Ctrl + G (GuardarRegistro)------------------------------
        $(document).keydown(function (e) {
            if ((e.key == 'g' || e.key == 'G') && (e.ctrlKey || e.metaKey)) {
                e.preventDefault();
                //alert("Ctrl-g pressed");
                $("form").submit();
                return false;
            }
            return true;
        });
        //--------------------Milecimas y decimales-------------------
        function MASK(form, n, mask, format) {
            if (format == "undefined") format = false;
            if (format || NUM(n)) {
                dec = 0, point = 0;
                x = mask.indexOf(".") + 1;
                if (x) { dec = mask.length - x; }

                if (dec) {
                    n = NUM(n, dec) + "";
                    x = n.indexOf(".") + 1;
                    if (x) { point = n.length - x; } else { n += "."; }
                } else {
                    n = NUM(n, 0) + "";
                }
                for (var x = point; x < dec ; x++) {
                    n += "0";
                }
                x = n.length, y = mask.length, XMASK = "";
                while (x || y) {
                    if (x) {
                        while (y && "#0.".indexOf(mask.charAt(y - 1)) == -1) {
                            if (n.charAt(x - 1) != "-")
                                XMASK = mask.charAt(y - 1) + XMASK;
                            y--;
                        }
                        XMASK = n.charAt(x - 1) + XMASK, x--;
                    } else if (y && "L0".indexOf(mask.charAt(y - 1)) + 1) {
                        XMASK = mask.charAt(y - 1) + XMASK;
                    }
                    if (y) { y-- }
                }
            } else {
                XMASK = "";
            }
            if (form) {
                form.value = XMASK;
                if (NUM(n) < 0) {
                    form.style.color = "#FF0000";
                } else {
                    form.style.color = "#000000";
                }
            }
            return XMASK;
        }

        function NUM(s, dec) {
            for (var s = s + "", num = "", x = 0 ; x < s.length ; x++) {
                c = s.charAt(x);
                if (".-+/*".indexOf(c) + 1 || c != " " && !isNaN(c)) { num += c; }
            }
            if (isNaN(num)) { num = eval(num); }
            if (num == "") { num = 0; } else { num = parseFloat(num); }
            if (dec != undefined) {
                r = .5; if (num < 0) r = -r;
                e = Math.pow(10, (dec > 0) ? dec : 0);
                return parseInt(num * e + r) / e;
            } else {
                return num;
            }
        }
    </script>
}
