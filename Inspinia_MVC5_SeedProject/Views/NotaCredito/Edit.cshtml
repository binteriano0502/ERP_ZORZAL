@model ERP_GMEDINA.Models.tbNotaCredito
@using ERP_GMEDINA.Models
@{
    ViewBag.Title = "Editar";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <h2>Nota Crédito</h2>
    </div>
    <div class="col-sm-8">
        <div class="title-action">
			@Html.ActionLink("Regresar", "Index")
        </div>
    </div>
</div>



<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Editar Nota Crédito</h5>
                </div>
                <div class="ibox-content">

				@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">

        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.nocre_Id)
        @*Auditoria*@
        @Html.HiddenFor(model => model.nocre_UsuarioCrea)
        @Html.HiddenFor(model => model.nocre_FechaCrea)
        @Html.HiddenFor(model => model.nocre_UsuarioModifica)
        @Html.HiddenFor(model => model.nocre_FechaModifica)
        @Html.HiddenFor(model => model.tbUsuario.usu_Nombres)
        @Html.HiddenFor(model => model.tbUsuario.usu_Apellidos)
        @Html.HiddenFor(model => model.tbUsuario1.usu_Nombres)
        @Html.HiddenFor(model => model.tbUsuario1.usu_Apellidos)

        <div class="form-group">
            @Html.LabelFor(model => model.suc_Id, "Sucursal", new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                <select id="suc_Id" name="suc_Id" class="form-control" readonly>
                    <option value="1">San Pedro Sula</option>
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nocre_Codigo, new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.nocre_Codigo, new { htmlAttributes = new { @readonly = "readonly" } })
                <p style="color:red"><span class="validation-error"> @Html.ValidationMessageFor(model => model.nocre_Codigo)</span></p>
            </div>
        </div>

        @*clte_Id*@
        <div class="form-group">
            <input type="hidden" class="form-control" id="clte_Id" name="clte_Id" />
        </div>
        @*clte_Id fin*@

        <div class="form-group">
            @Html.LabelFor(model => model.tbCliente.clte_Identificacion, "Identificación Cliente", new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.tbCliente.clte_Identificacion, new { htmlAttributes = new { @readonly = "readonly" } })
                <p style="color:red"><span class="validation-error">@Html.ValidationMessageFor(model => model.tbCliente.clte_Identificacion)</span></p>
            </div>
            <div class="col-md-">
                <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#ModalAgregarCliente"><span class="glyphicon glyphicon-search"></span></button>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.tbCliente.clte_Nombres, "Cliente", new { @class = "control-label col-md-2" })
            <div class="col-md-4">
               @if (Model.tbCliente.clte_EsPersonaNatural == true)
               {
                @Html.EditorFor(model => model.tbCliente.clte_Nombres, new { htmlAttributes = new { @readonly = "readonly" } })
               }
               else
               {
                @Html.EditorFor(model => model.tbCliente.clte_NombreComercial, new { htmlAttributes = new { @readonly = "readonly" } })
               }

                <p style="color:red"><span class="validation-error">@Html.ValidationMessageFor(model => model.tbCliente.clte_Nombres)</span></p>
                
            </div>
            
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nocre_FechaEmision, new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.nocre_FechaEmision, new { htmlAttributes = new {@readonly = "readonly" } })
                <p style="color:red"><span class="validation-error">@Html.ValidationMessageFor(model => model.nocre_FechaEmision)</span></p>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nocre_Monto, new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.nocre_Monto, new { htmlAttributes = new { @type = "number", @min = "0", @step = "0.01", @value = "0", maxlength = "4" } })
                <p style="color:red"><span class="validation-error">@Html.ValidationMessageFor(model => model.nocre_Monto)</span></p>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nocre_MotivoEmision, new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.nocre_MotivoEmision)
                <span class="validation-error">@Html.ValidationMessageFor(model => model.nocre_MotivoEmision)</span>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dev_Id, "Devolución", new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.dev_Id)
                <p style="color:red"><span class="validation-error">@Html.ValidationMessageFor(model => model.dev_Id)</span></p>
            </div>
            <div class="col-md-">
                <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#ModalAgregarDevolucion"><span class="glyphicon glyphicon-search"></span></button>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nocre_Estado, new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @if (Model.nocre_Estado == true)
                {
                    <select class="form-control" data-val="true" data-val-required="*El campo Anulada es requerido" id="nocre_Estado"
                            name="nocre_Estado" value="Activo">
                        <option selected="selected" value="true">Activo</option>
                        <option value="false">Inactivo</option>
                    </select>
                }
                else
                {
                    <select class="form-control" data-val="true" data-val-required="*El campo Anulada es requerido" id="nocre_Estado"
                            name="nocre_Estado" value="Inactivo">
                        <option selected="selected" value="false">Inactivo</option>
                        <option value="true">Activo</option>
                    </select>
                }
                <p style="color:red"><span class="validation-error">@Html.ValidationMessageFor(model => model.nocre_Estado)</span></p>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nocre_Anulado, new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @if (Model.nocre_Anulado == true)
                {
                    <select class="form-control" data-val="true" data-val-required="*El campo Anulada es requerido" id="nocre_Anulado"
                            name="nocre_Anulado" value="Si" readonly>
                        <option selected="selected" value="true">Si</option>
                    </select>
                }
                else
                {
                    <select class="form-control" data-val="true" data-val-required="*El campo Anulada es requerido" id="nocre_Anulado"
                            name="nocre_Anulado" value="No" readonly>
                        <option selected="selected" value="false">No</option>
                    </select>
                }
               
                
                <p style="color:red">@Html.ValidationMessageFor(model => model.nocre_Anulado)</p>
            </div>
        </div>
        @*clte_Id NotaCredito*@
        <div class="form-group">
            <input type="text" id="clte_Id" name="clte_Id" />
            <input type="text" id="nocre_Estado" name="nocre_Estado" value="false" />
            <input type="text" id="cdto_Anulado" name="nocre_Anulado" value="false" />
        </div>
        @*clte_Id NotaCredito fin*@
        <div class="form-group">
            <div class="col-md-12 text-center">
                <input type="submit" value="Guardar" class="btn btn-primary" />
				@Html.ActionLink("Cancelar", "Index", null, new { @class = "btn btn-white"})
            </div>
        </div>
    </div>
}
                </div>
            </div>
            <div class="ibox-content">
                <table class="table table-striped">
                    <tr>
                        <th>Acción</th>
                        <th>Usuario</th>
                        <th>Fecha</th>
                    </tr>
                    <tr>
                        <td>Creado</td>
                        <td>
                            @Html.DisplayFor(model => model.tbUsuario.usu_Nombres)
                        @Html.DisplayFor(model => model.tbUsuario.usu_Apellidos)
                    </td>
                    <td>@Html.DisplayFor(model => model.nocre_FechaCrea)</td>
                </tr>
                <tr>
                    <td>Modificado</td>
                    <td>
                        @Html.DisplayFor(model => model.tbUsuario1.usu_Nombres)
                    @Html.DisplayFor(model => model.tbUsuario1.usu_Apellidos)
                </td>
                <td>@Html.DisplayFor(model => model.nocre_FechaModifica)</td>
            </tr>
        </table>
        </div>
        </div>
    </div>
 </div>

<div>
    <div class="modal fade" id="ModalAgregarCliente" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h4 class="modal-title" id="myModalLabel">Agregar Cliente</h4>
                </div>
                <div class="modal-body">
                    @Html.Partial("_IndexCliente", (List<tbCliente>)ViewBag.Cliente)
                </div>
            </div>
        </div>
    </div>
</div>

<div>
    <div class="modal fade" id="ModalAgregarDevolucion" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h4 class="modal-title" id="myModalLabel">Agregar Devolucion</h4>
                </div>
                <div class="modal-body">
                    @Html.Partial("_IndexDevolucion", (List<tbDevolucionDetalle>)ViewBag.Devolucion)
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script>
 $.datepicker.regional['es'] = {
 closeText: 'Cerrar',
 prevText: '< Ant',
 nextText: 'Sig >',
 currentText: 'Hoy',
 monthNames: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'],
 monthNamesShort: ['Ene','Feb','Mar','Abr', 'May','Jun','Jul','Ago','Sep', 'Oct','Nov','Dic'],
 dayNames: ['Domingo', 'Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado'],
 dayNamesShort: ['Dom','Lun','Mar','Mié','Juv','Vie','Sáb'],
 dayNamesMin: ['Do','Lu','Ma','Mi','Ju','Vi','Sá'],
 weekHeader: 'Sm',
 dateFormat: 'dd/mm/yy',
 firstDay: 1,
 isRTL: false,
 showMonthAfterYear: false,
 yearSuffix: ''
 };
 $.datepicker.setDefaults($.datepicker.regional['es']);
$(function () {
    $("#nocre_FechaEmision").datepicker({dateFormat: 'dd/mm/yy', minDate:0, maxDate:"+0d"});
});
</script>
}


